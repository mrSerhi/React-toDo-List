{"version":3,"sources":["Components/HeadBlock/HeadBlock.jsx","Components/Search/Search.jsx","Components/SortButtonsSide/SortBtn.jsx","Components/ToDoList/ToDoItem.jsx","Components/ToDoList/ToDoList.jsx","Components/ToDoForm/ToDoForm.jsx","Components/App/App.js","index.js"],"names":["HeaderBlock","_ref","allToDo","doneToDo","allItems","react_default","a","createElement","className","doneItems","Search","state","value","_this","props","query","handleInputChange","e","target","onSearch","setState","onChange","this","type","placeholder","Component","SortBlock","types","_this$props","onFilter","filter","buttons","map","active","btnInitClassNames","onClick","library","add","faTrash","faStar","ToDoListItem","isDone","done","isImportant","important","onDelete","onDone","onImportant","importantClassNames","defaultItemClasses","doneClassNames","react_fontawesome_index_es","icon","TodoList","items","onItemDelete","onToggleDone","onToggleImportant","listItems","item","id","data","Object","objectWithoutProperties","key","ToDoItem","assign","ToDoForm","handleChangeInputValue","handleSubmitForm","preventDefault","val","onSubmit","App","sortFilter","handleInputSearch","handleItemDelete","toConsumableArray","handleItemAdd","Date","now","Math","random","_ref2","concat","updateToggledItems","stateObj","stateValue","shallCopy","index","findIndex","objectSpread","defineProperty","handleToggleDone","_ref3","handleToggleImportant","_ref4","handleGetingSortFilter","sortingItems","foundItems","toLowerCase","includes","_this$state","itemsDoneLength","length","itemsLength","sortedItems","HeadBlock","Components_Search_Search","SortBtn","ToDoList","Components_ToDoForm_ToDoForm","ReactDOM","render","Components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.6d9fa743.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst HeaderBlock = ({ allToDo, doneToDo }) => {\n  const allItems = <span className=\"badge badge-info p-2\">{allToDo}</span>;\n  const doneItems = <span className=\"badge badge-success p-2\">{doneToDo}</span>;\n\n  return (\n    <div className=\"row py-3\">\n      <div className=\"col-6 offset-1 text-center\">\n        <h1 className=\"display4 text-uppercase\">to-do app</h1>\n      </div>\n      <div className=\"col-4\">\n        <p>\n          You have {allItems} <b>Active</b> items, and {doneItems} <b>Done</b>.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nHeaderBlock.propTypes = {\n  allToDo: PropTypes.number,\n  doneToDo: PropTypes.number\n};\n\nexport default HeaderBlock;\n","import React, { Component } from \"react\";\n\nclass Search extends Component {\n  state = {\n    value: this.props.query\n  };\n\n  handleInputChange = e => {\n    const target = e.target.value;\n\n    this.props.onSearch(target);\n    this.setState({ value: target });\n  };\n\n  render() {\n    return (\n      <div className=\"col-4\">\n        <div className=\"input-group\">\n          <input\n            onChange={this.handleInputChange}\n            value={this.state.value}\n            type=\"search\"\n            className=\"form-control text-info\"\n            placeholder=\"Try to search...\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\n\nclass SortBlock extends Component {\n  types = [\"all\", \"active\", \"done\"];\n\n  render() {\n    const { onFilter, filter } = this.props;\n    const btnInitClassNames = \"btn btn-outline-dark \";\n    const buttons = this.types.map(type => {\n      const active =\n        filter === type ? btnInitClassNames + \"active\" : btnInitClassNames;\n      return (\n        <button onClick={() => onFilter(type)} type=\"button\" className={active}>\n          {type}\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"col-2\">\n        <div className=\"btn-group\">{buttons}</div>\n      </div>\n    );\n  }\n}\n\nexport default SortBlock;\n","import React from \"react\";\nimport \"./todo-list.css\";\nimport PropTypes from \"prop-types\";\n\n//Font-awesome v5\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faStar } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faTrash, faStar);\n\nconst ToDoListItem = ({\n  value,\n  done: isDone,\n  important: isImportant,\n  onDelete,\n  onDone,\n  onImportant\n}) => {\n  const importantClassNames = isImportant ? \"todo-item important\" : \"todo-item\";\n  let defaultItemClasses =\n    \"d-flex flex-row justify-content-between align-items-center \";\n  const doneClassNames = isDone\n    ? defaultItemClasses + \"done\"\n    : defaultItemClasses;\n\n  return (\n    <div className={doneClassNames}>\n      <span onClick={onDone} className={importantClassNames}>\n        {value}\n      </span>\n\n      <div className=\"block\">\n        <button onClick={onDelete} className=\"btn btn-outline-danger mr-1\">\n          <FontAwesomeIcon icon={faTrash} />\n        </button>\n        <button onClick={onImportant} className=\"btn btn-outline-warning\">\n          <FontAwesomeIcon icon={faStar} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nToDoListItem.propTypes = {\n  value: PropTypes.string.isRequired,\n  done: PropTypes.bool.isRequired,\n  important: PropTypes.bool.isRequired\n};\n\nexport default ToDoListItem;\n","import React from \"react\";\nimport ToDoListItem from \"./ToDoItem\";\nimport PropTypes from \"prop-types\";\n\nconst TodoList = ({ items, onItemDelete, onToggleDone, onToggleImportant }) => {\n  const listItems = items.map(item => {\n    const { id, ...data } = item;\n    return (\n      <li key={id} className=\"list-group-item list-group-item-light\">\n        <ToDoListItem\n          {...data}\n          onDelete={() => onItemDelete(id)}\n          onDone={() => onToggleDone(id)}\n          onImportant={() => onToggleImportant(id)}\n        />\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"row my-3\">\n      <div className=\"col-6 m-auto\">\n        <ul className=\"list-group\">{listItems}</ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  items: PropTypes.array.isRequired,\n  onToggleImportant: PropTypes.func.isRequired,\n  onToggleDone: PropTypes.func.isRequired,\n  onItemDelete: PropTypes.func.isRequired\n};\n\nexport default TodoList;\n","import React, { Component } from \"react\";\n\nclass ToDoForm extends Component {\n  state = {\n    value: \"\"\n  };\n\n  handleChangeInputValue = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleSubmitForm = e => {\n    e.preventDefault();\n    const val = this.state.value;\n    if (val) this.props.onSubmit(val);\n\n    this.setState({ value: \"\" });\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-sm-6 m-auto\">\n          <form onSubmit={this.handleSubmitForm}>\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"What do you want add?\"\n                value={this.state.value} // control el-t with state of component\n                onChange={this.handleChangeInputValue}\n              />\n              <div className=\"input-group-append\">\n                <button type=\"submit\" className=\"btn btn-outline-info\">\n                  save\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoForm;\n","import React, { Component } from \"react\";\n// Components\nimport HeaderBlock from \"../HeadBlock/HeadBlock\";\nimport Search from \"../Search/Search\";\nimport SortBlock from \"../SortButtonsSide/SortBtn\";\nimport TodoList from \"../ToDoList/ToDoList\";\nimport ToDoForm from \"../ToDoForm/ToDoForm\";\n\n//Font-awesome v5\n// import { library } from '@fortawesome/fontawesome-svg-core'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faIgloo } from '@fortawesome/free-solid-svg-icons'\n// library.add(faIgloo)\n\nclass App extends Component {\n  state = {\n    items: [\n      {\n        id: \"22l3l2\",\n        value: \"create react app\",\n        done: false,\n        important: false\n      },\n      {\n        id: \"22vvvx3l2\",\n        value: \"clean my room\",\n        done: false,\n        important: false\n      },\n      {\n        id: \"dfgfgt44\",\n        value: \"read the newspeaper\",\n        done: false,\n        important: false\n      }\n    ],\n    query: \"\",\n    sortFilter: \"all\"\n  };\n\n  handleInputSearch = query => {\n    this.setState({ query });\n  };\n\n  handleItemDelete = id => {\n    this.setState(({ items }) => {\n      const itemsShallCopy = [...items];\n      const sortedItems = itemsShallCopy.filter(item => item.id !== id);\n\n      return { items: sortedItems };\n    });\n  };\n\n  handleItemAdd = val => {\n    const item = {\n      id: Date.now() + Math.random(),\n      value: val,\n      done: false,\n      important: false\n    };\n\n    this.setState(({ items }) => {\n      const shallCopy = [...items, item];\n      return { items: shallCopy };\n    });\n  };\n\n  // id - current item id\n  // stateObj - current state obj which will be updated\n  // stateValue - current value of state object\n  updateToggledItems = (id, stateObj, stateValue) => {\n    const shallCopy = [...stateObj];\n    const index = shallCopy.findIndex(item => item.id === id);\n    shallCopy[index] = {\n      ...shallCopy[index],\n      [stateValue]: !shallCopy[index][stateValue]\n    };\n    return shallCopy;\n  };\n\n  handleToggleDone = id => {\n    this.setState(({ items }) => {\n      const mutedStateObj = this.updateToggledItems(id, items, \"done\");\n      return { items: mutedStateObj };\n    });\n  };\n\n  handleToggleImportant = id => {\n    this.setState(({ items }) => {\n      const mutedStateObj = this.updateToggledItems(id, items, \"important\");\n      return { items: mutedStateObj };\n    });\n  };\n\n  handleGetingSortFilter = filter => {\n    this.setState({ sortFilter: filter });\n  };\n\n  sortingItems = (items, filter) => {\n    const foundItems = items.filter(item =>\n      item.value.toLowerCase().includes(this.state.query.toLowerCase())\n    );\n    if (filter === \"active\") return foundItems.filter(item => !item.done);\n    if (filter === \"done\") return foundItems.filter(item => item.done);\n\n    return foundItems;\n  };\n\n  render() {\n    const { items, query, sortFilter } = this.state;\n    const itemsDoneLength = items.filter(item => item.done).length;\n    const itemsLength = items.length - itemsDoneLength;\n    const sortedItems = this.sortingItems(items, sortFilter);\n\n    return (\n      <section className=\"todo-app\">\n        <div className=\"container\">\n          <HeaderBlock allToDo={itemsLength} doneToDo={itemsDoneLength} />\n\n          <div className=\"row justify-content-center\">\n            <Search query={query} onSearch={this.handleInputSearch} />\n            <SortBlock\n              filter={sortFilter}\n              onFilter={this.handleGetingSortFilter}\n            />\n          </div>\n\n          <TodoList\n            items={sortedItems}\n            onItemDelete={this.handleItemDelete}\n            onToggleDone={this.handleToggleDone}\n            onToggleImportant={this.handleToggleImportant}\n          />\n          <ToDoForm onSubmit={this.handleItemAdd} />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}